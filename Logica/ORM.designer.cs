#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     Este código fue generado por una herramienta.
//     Versión de runtime:4.0.30319.42000
//
//     Los cambios en este archivo podrían causar un comportamiento incorrecto y se perderán si
//     se vuelve a generar el código.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Logica
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="SaludValle")]
	public partial class ORMDataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Definiciones de métodos de extensibilidad
    partial void OnCreated();
    partial void Insertcita(cita instance);
    partial void Updatecita(cita instance);
    partial void Deletecita(cita instance);
    partial void Insertsintoma(sintoma instance);
    partial void Updatesintoma(sintoma instance);
    partial void Deletesintoma(sintoma instance);
    partial void Insertciudad(ciudad instance);
    partial void Updateciudad(ciudad instance);
    partial void Deleteciudad(ciudad instance);
    partial void Insertenfermedad(enfermedad instance);
    partial void Updateenfermedad(enfermedad instance);
    partial void Deleteenfermedad(enfermedad instance);
    partial void Insertenfermedad_sintoma(enfermedad_sintoma instance);
    partial void Updateenfermedad_sintoma(enfermedad_sintoma instance);
    partial void Deleteenfermedad_sintoma(enfermedad_sintoma instance);
    partial void Insertente_salud(ente_salud instance);
    partial void Updateente_salud(ente_salud instance);
    partial void Deleteente_salud(ente_salud instance);
    partial void Insertespecialista(especialista instance);
    partial void Updateespecialista(especialista instance);
    partial void Deleteespecialista(especialista instance);
    partial void Insertgenerador_contenido(generador_contenido instance);
    partial void Updategenerador_contenido(generador_contenido instance);
    partial void Deletegenerador_contenido(generador_contenido instance);
    partial void Insertpersona(persona instance);
    partial void Updatepersona(persona instance);
    partial void Deletepersona(persona instance);
    partial void Insertrecomendacion(recomendacion instance);
    partial void Updaterecomendacion(recomendacion instance);
    partial void Deleterecomendacion(recomendacion instance);
    partial void Insertrol(rol instance);
    partial void Updaterol(rol instance);
    partial void Deleterol(rol instance);
    #endregion
		
		public ORMDataContext() : 
				base(global::Logica.Properties.Settings.Default.SaludValleConnectionString1, mappingSource)
		{
			OnCreated();
		}
		
		public ORMDataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public ORMDataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public ORMDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public ORMDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<cita> cita
		{
			get
			{
				return this.GetTable<cita>();
			}
		}
		
		public System.Data.Linq.Table<sintoma> sintoma
		{
			get
			{
				return this.GetTable<sintoma>();
			}
		}
		
		public System.Data.Linq.Table<ciudad> ciudad
		{
			get
			{
				return this.GetTable<ciudad>();
			}
		}
		
		public System.Data.Linq.Table<enfermedad> enfermedad
		{
			get
			{
				return this.GetTable<enfermedad>();
			}
		}
		
		public System.Data.Linq.Table<enfermedad_sintoma> enfermedad_sintoma
		{
			get
			{
				return this.GetTable<enfermedad_sintoma>();
			}
		}
		
		public System.Data.Linq.Table<ente_salud> ente_salud
		{
			get
			{
				return this.GetTable<ente_salud>();
			}
		}
		
		public System.Data.Linq.Table<especialista> especialista
		{
			get
			{
				return this.GetTable<especialista>();
			}
		}
		
		public System.Data.Linq.Table<generador_contenido> generador_contenido
		{
			get
			{
				return this.GetTable<generador_contenido>();
			}
		}
		
		public System.Data.Linq.Table<persona> persona
		{
			get
			{
				return this.GetTable<persona>();
			}
		}
		
		public System.Data.Linq.Table<recomendacion> recomendacion
		{
			get
			{
				return this.GetTable<recomendacion>();
			}
		}
		
		public System.Data.Linq.Table<rol> rol
		{
			get
			{
				return this.GetTable<rol>();
			}
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.sp_login")]
		public ISingleResult<sp_loginResult> sp_login([global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Int")] System.Nullable<int> cedula, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="VarChar(50)")] string contrasenia)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), cedula, contrasenia);
			return ((ISingleResult<sp_loginResult>)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.sp_checkUser")]
		public ISingleResult<sp_checkUserResult> sp_checkUser([global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Int")] System.Nullable<int> cedula)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), cedula);
			return ((ISingleResult<sp_checkUserResult>)(result.ReturnValue));
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.cita")]
	public partial class cita : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id_cita;
		
		private int _id_persona;
		
		private int _id_especialista;
		
		private System.DateTime _fecha_cita;
		
		private System.TimeSpan _hora_cita;
		
		private System.Nullable<int> _calificacion;
		
		private string _estado;
		
		private EntityRef<especialista> _especialista;
		
		private EntityRef<persona> _persona;
		
    #region Definiciones de métodos de extensibilidad
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void Onid_citaChanging(int value);
    partial void Onid_citaChanged();
    partial void Onid_personaChanging(int value);
    partial void Onid_personaChanged();
    partial void Onid_especialistaChanging(int value);
    partial void Onid_especialistaChanged();
    partial void Onfecha_citaChanging(System.DateTime value);
    partial void Onfecha_citaChanged();
    partial void Onhora_citaChanging(System.TimeSpan value);
    partial void Onhora_citaChanged();
    partial void OncalificacionChanging(System.Nullable<int> value);
    partial void OncalificacionChanged();
    partial void OnestadoChanging(string value);
    partial void OnestadoChanged();
    #endregion
		
		public cita()
		{
			this._especialista = default(EntityRef<especialista>);
			this._persona = default(EntityRef<persona>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id_cita", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int id_cita
		{
			get
			{
				return this._id_cita;
			}
			set
			{
				if ((this._id_cita != value))
				{
					this.Onid_citaChanging(value);
					this.SendPropertyChanging();
					this._id_cita = value;
					this.SendPropertyChanged("id_cita");
					this.Onid_citaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id_persona", DbType="Int NOT NULL")]
		public int id_persona
		{
			get
			{
				return this._id_persona;
			}
			set
			{
				if ((this._id_persona != value))
				{
					if (this._persona.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Onid_personaChanging(value);
					this.SendPropertyChanging();
					this._id_persona = value;
					this.SendPropertyChanged("id_persona");
					this.Onid_personaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id_especialista", DbType="Int NOT NULL")]
		public int id_especialista
		{
			get
			{
				return this._id_especialista;
			}
			set
			{
				if ((this._id_especialista != value))
				{
					if (this._especialista.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Onid_especialistaChanging(value);
					this.SendPropertyChanging();
					this._id_especialista = value;
					this.SendPropertyChanged("id_especialista");
					this.Onid_especialistaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_fecha_cita", DbType="Date NOT NULL")]
		public System.DateTime fecha_cita
		{
			get
			{
				return this._fecha_cita;
			}
			set
			{
				if ((this._fecha_cita != value))
				{
					this.Onfecha_citaChanging(value);
					this.SendPropertyChanging();
					this._fecha_cita = value;
					this.SendPropertyChanged("fecha_cita");
					this.Onfecha_citaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_hora_cita", DbType="Time NOT NULL")]
		public System.TimeSpan hora_cita
		{
			get
			{
				return this._hora_cita;
			}
			set
			{
				if ((this._hora_cita != value))
				{
					this.Onhora_citaChanging(value);
					this.SendPropertyChanging();
					this._hora_cita = value;
					this.SendPropertyChanged("hora_cita");
					this.Onhora_citaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_calificacion", DbType="Int")]
		public System.Nullable<int> calificacion
		{
			get
			{
				return this._calificacion;
			}
			set
			{
				if ((this._calificacion != value))
				{
					this.OncalificacionChanging(value);
					this.SendPropertyChanging();
					this._calificacion = value;
					this.SendPropertyChanged("calificacion");
					this.OncalificacionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_estado", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string estado
		{
			get
			{
				return this._estado;
			}
			set
			{
				if ((this._estado != value))
				{
					this.OnestadoChanging(value);
					this.SendPropertyChanging();
					this._estado = value;
					this.SendPropertyChanged("estado");
					this.OnestadoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="especialista_cita", Storage="_especialista", ThisKey="id_especialista", OtherKey="id_persona", IsForeignKey=true)]
		public especialista especialista
		{
			get
			{
				return this._especialista.Entity;
			}
			set
			{
				especialista previousValue = this._especialista.Entity;
				if (((previousValue != value) 
							|| (this._especialista.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._especialista.Entity = null;
						previousValue.cita.Remove(this);
					}
					this._especialista.Entity = value;
					if ((value != null))
					{
						value.cita.Add(this);
						this._id_especialista = value.id_persona;
					}
					else
					{
						this._id_especialista = default(int);
					}
					this.SendPropertyChanged("especialista");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="persona_cita", Storage="_persona", ThisKey="id_persona", OtherKey="cedula", IsForeignKey=true)]
		public persona persona
		{
			get
			{
				return this._persona.Entity;
			}
			set
			{
				persona previousValue = this._persona.Entity;
				if (((previousValue != value) 
							|| (this._persona.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._persona.Entity = null;
						previousValue.cita.Remove(this);
					}
					this._persona.Entity = value;
					if ((value != null))
					{
						value.cita.Add(this);
						this._id_persona = value.cedula;
					}
					else
					{
						this._id_persona = default(int);
					}
					this.SendPropertyChanged("persona");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.sintoma")]
	public partial class sintoma : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id_sintoma;
		
		private string _sintoma_texto;
		
		private EntitySet<enfermedad_sintoma> _enfermedad_sintoma;
		
    #region Definiciones de métodos de extensibilidad
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void Onid_sintomaChanging(int value);
    partial void Onid_sintomaChanged();
    partial void Onsintoma_textoChanging(string value);
    partial void Onsintoma_textoChanged();
    #endregion
		
		public sintoma()
		{
			this._enfermedad_sintoma = new EntitySet<enfermedad_sintoma>(new Action<enfermedad_sintoma>(this.attach_enfermedad_sintoma), new Action<enfermedad_sintoma>(this.detach_enfermedad_sintoma));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id_sintoma", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int id_sintoma
		{
			get
			{
				return this._id_sintoma;
			}
			set
			{
				if ((this._id_sintoma != value))
				{
					this.Onid_sintomaChanging(value);
					this.SendPropertyChanging();
					this._id_sintoma = value;
					this.SendPropertyChanged("id_sintoma");
					this.Onid_sintomaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_sintoma_texto", DbType="Text", UpdateCheck=UpdateCheck.Never)]
		public string sintoma_texto
		{
			get
			{
				return this._sintoma_texto;
			}
			set
			{
				if ((this._sintoma_texto != value))
				{
					this.Onsintoma_textoChanging(value);
					this.SendPropertyChanging();
					this._sintoma_texto = value;
					this.SendPropertyChanged("sintoma_texto");
					this.Onsintoma_textoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="sintoma_enfermedad_sintoma", Storage="_enfermedad_sintoma", ThisKey="id_sintoma", OtherKey="id_sintoma")]
		public EntitySet<enfermedad_sintoma> enfermedad_sintoma
		{
			get
			{
				return this._enfermedad_sintoma;
			}
			set
			{
				this._enfermedad_sintoma.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_enfermedad_sintoma(enfermedad_sintoma entity)
		{
			this.SendPropertyChanging();
			entity.sintoma = this;
		}
		
		private void detach_enfermedad_sintoma(enfermedad_sintoma entity)
		{
			this.SendPropertyChanging();
			entity.sintoma = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.ciudad")]
	public partial class ciudad : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id_ciudad;
		
		private string _ciudad1;
		
		private EntitySet<ente_salud> _ente_salud;
		
		private EntitySet<especialista> _especialista;
		
    #region Definiciones de métodos de extensibilidad
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void Onid_ciudadChanging(int value);
    partial void Onid_ciudadChanged();
    partial void Onciudad1Changing(string value);
    partial void Onciudad1Changed();
    #endregion
		
		public ciudad()
		{
			this._ente_salud = new EntitySet<ente_salud>(new Action<ente_salud>(this.attach_ente_salud), new Action<ente_salud>(this.detach_ente_salud));
			this._especialista = new EntitySet<especialista>(new Action<especialista>(this.attach_especialista), new Action<especialista>(this.detach_especialista));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id_ciudad", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int id_ciudad
		{
			get
			{
				return this._id_ciudad;
			}
			set
			{
				if ((this._id_ciudad != value))
				{
					this.Onid_ciudadChanging(value);
					this.SendPropertyChanging();
					this._id_ciudad = value;
					this.SendPropertyChanged("id_ciudad");
					this.Onid_ciudadChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="ciudad", Storage="_ciudad1", DbType="VarChar(30) NOT NULL", CanBeNull=false)]
		public string ciudad1
		{
			get
			{
				return this._ciudad1;
			}
			set
			{
				if ((this._ciudad1 != value))
				{
					this.Onciudad1Changing(value);
					this.SendPropertyChanging();
					this._ciudad1 = value;
					this.SendPropertyChanged("ciudad1");
					this.Onciudad1Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ciudad_ente_salud", Storage="_ente_salud", ThisKey="id_ciudad", OtherKey="id_cuidad")]
		public EntitySet<ente_salud> ente_salud
		{
			get
			{
				return this._ente_salud;
			}
			set
			{
				this._ente_salud.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ciudad_especialista", Storage="_especialista", ThisKey="id_ciudad", OtherKey="id_ciudad")]
		public EntitySet<especialista> especialista
		{
			get
			{
				return this._especialista;
			}
			set
			{
				this._especialista.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_ente_salud(ente_salud entity)
		{
			this.SendPropertyChanging();
			entity.ciudad = this;
		}
		
		private void detach_ente_salud(ente_salud entity)
		{
			this.SendPropertyChanging();
			entity.ciudad = null;
		}
		
		private void attach_especialista(especialista entity)
		{
			this.SendPropertyChanging();
			entity.ciudad = this;
		}
		
		private void detach_especialista(especialista entity)
		{
			this.SendPropertyChanging();
			entity.ciudad = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.enfermedad")]
	public partial class enfermedad : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id_enfermedad;
		
		private string _nombre;
		
		private EntitySet<enfermedad_sintoma> _enfermedad_sintoma;
		
		private EntitySet<recomendacion> _recomendacion;
		
    #region Definiciones de métodos de extensibilidad
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void Onid_enfermedadChanging(int value);
    partial void Onid_enfermedadChanged();
    partial void OnnombreChanging(string value);
    partial void OnnombreChanged();
    #endregion
		
		public enfermedad()
		{
			this._enfermedad_sintoma = new EntitySet<enfermedad_sintoma>(new Action<enfermedad_sintoma>(this.attach_enfermedad_sintoma), new Action<enfermedad_sintoma>(this.detach_enfermedad_sintoma));
			this._recomendacion = new EntitySet<recomendacion>(new Action<recomendacion>(this.attach_recomendacion), new Action<recomendacion>(this.detach_recomendacion));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id_enfermedad", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int id_enfermedad
		{
			get
			{
				return this._id_enfermedad;
			}
			set
			{
				if ((this._id_enfermedad != value))
				{
					this.Onid_enfermedadChanging(value);
					this.SendPropertyChanging();
					this._id_enfermedad = value;
					this.SendPropertyChanged("id_enfermedad");
					this.Onid_enfermedadChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_nombre", DbType="VarChar(30)")]
		public string nombre
		{
			get
			{
				return this._nombre;
			}
			set
			{
				if ((this._nombre != value))
				{
					this.OnnombreChanging(value);
					this.SendPropertyChanging();
					this._nombre = value;
					this.SendPropertyChanged("nombre");
					this.OnnombreChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="enfermedad_enfermedad_sintoma", Storage="_enfermedad_sintoma", ThisKey="id_enfermedad", OtherKey="id_enfermedad")]
		public EntitySet<enfermedad_sintoma> enfermedad_sintoma
		{
			get
			{
				return this._enfermedad_sintoma;
			}
			set
			{
				this._enfermedad_sintoma.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="enfermedad_recomendacion", Storage="_recomendacion", ThisKey="id_enfermedad", OtherKey="id_enfermedad")]
		public EntitySet<recomendacion> recomendacion
		{
			get
			{
				return this._recomendacion;
			}
			set
			{
				this._recomendacion.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_enfermedad_sintoma(enfermedad_sintoma entity)
		{
			this.SendPropertyChanging();
			entity.enfermedad = this;
		}
		
		private void detach_enfermedad_sintoma(enfermedad_sintoma entity)
		{
			this.SendPropertyChanging();
			entity.enfermedad = null;
		}
		
		private void attach_recomendacion(recomendacion entity)
		{
			this.SendPropertyChanging();
			entity.enfermedad = this;
		}
		
		private void detach_recomendacion(recomendacion entity)
		{
			this.SendPropertyChanging();
			entity.enfermedad = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.enfermedad_sintoma")]
	public partial class enfermedad_sintoma : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id_ES;
		
		private int _id_sintoma;
		
		private int _id_enfermedad;
		
		private EntityRef<enfermedad> _enfermedad;
		
		private EntityRef<sintoma> _sintoma;
		
    #region Definiciones de métodos de extensibilidad
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void Onid_ESChanging(int value);
    partial void Onid_ESChanged();
    partial void Onid_sintomaChanging(int value);
    partial void Onid_sintomaChanged();
    partial void Onid_enfermedadChanging(int value);
    partial void Onid_enfermedadChanged();
    #endregion
		
		public enfermedad_sintoma()
		{
			this._enfermedad = default(EntityRef<enfermedad>);
			this._sintoma = default(EntityRef<sintoma>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id_ES", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int id_ES
		{
			get
			{
				return this._id_ES;
			}
			set
			{
				if ((this._id_ES != value))
				{
					this.Onid_ESChanging(value);
					this.SendPropertyChanging();
					this._id_ES = value;
					this.SendPropertyChanged("id_ES");
					this.Onid_ESChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id_sintoma", DbType="Int NOT NULL")]
		public int id_sintoma
		{
			get
			{
				return this._id_sintoma;
			}
			set
			{
				if ((this._id_sintoma != value))
				{
					if (this._sintoma.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Onid_sintomaChanging(value);
					this.SendPropertyChanging();
					this._id_sintoma = value;
					this.SendPropertyChanged("id_sintoma");
					this.Onid_sintomaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id_enfermedad", DbType="Int NOT NULL")]
		public int id_enfermedad
		{
			get
			{
				return this._id_enfermedad;
			}
			set
			{
				if ((this._id_enfermedad != value))
				{
					if (this._enfermedad.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Onid_enfermedadChanging(value);
					this.SendPropertyChanging();
					this._id_enfermedad = value;
					this.SendPropertyChanged("id_enfermedad");
					this.Onid_enfermedadChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="enfermedad_enfermedad_sintoma", Storage="_enfermedad", ThisKey="id_enfermedad", OtherKey="id_enfermedad", IsForeignKey=true)]
		public enfermedad enfermedad
		{
			get
			{
				return this._enfermedad.Entity;
			}
			set
			{
				enfermedad previousValue = this._enfermedad.Entity;
				if (((previousValue != value) 
							|| (this._enfermedad.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._enfermedad.Entity = null;
						previousValue.enfermedad_sintoma.Remove(this);
					}
					this._enfermedad.Entity = value;
					if ((value != null))
					{
						value.enfermedad_sintoma.Add(this);
						this._id_enfermedad = value.id_enfermedad;
					}
					else
					{
						this._id_enfermedad = default(int);
					}
					this.SendPropertyChanged("enfermedad");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="sintoma_enfermedad_sintoma", Storage="_sintoma", ThisKey="id_sintoma", OtherKey="id_sintoma", IsForeignKey=true)]
		public sintoma sintoma
		{
			get
			{
				return this._sintoma.Entity;
			}
			set
			{
				sintoma previousValue = this._sintoma.Entity;
				if (((previousValue != value) 
							|| (this._sintoma.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._sintoma.Entity = null;
						previousValue.enfermedad_sintoma.Remove(this);
					}
					this._sintoma.Entity = value;
					if ((value != null))
					{
						value.enfermedad_sintoma.Add(this);
						this._id_sintoma = value.id_sintoma;
					}
					else
					{
						this._id_sintoma = default(int);
					}
					this.SendPropertyChanged("sintoma");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.ente_salud")]
	public partial class ente_salud : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id_persona;
		
		private int _nit;
		
		private string _razon_social;
		
		private string _representante;
		
		private string _telefono;
		
		private string _sitio_web;
		
		private int _id_cuidad;
		
		private int _capacidad_pacientes;
		
		private EntitySet<especialista> _especialista;
		
		private EntitySet<generador_contenido> _generador_contenido;
		
		private EntityRef<ciudad> _ciudad;
		
		private EntityRef<persona> _persona;
		
    #region Definiciones de métodos de extensibilidad
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void Onid_personaChanging(int value);
    partial void Onid_personaChanged();
    partial void OnnitChanging(int value);
    partial void OnnitChanged();
    partial void Onrazon_socialChanging(string value);
    partial void Onrazon_socialChanged();
    partial void OnrepresentanteChanging(string value);
    partial void OnrepresentanteChanged();
    partial void OntelefonoChanging(string value);
    partial void OntelefonoChanged();
    partial void Onsitio_webChanging(string value);
    partial void Onsitio_webChanged();
    partial void Onid_cuidadChanging(int value);
    partial void Onid_cuidadChanged();
    partial void Oncapacidad_pacientesChanging(int value);
    partial void Oncapacidad_pacientesChanged();
    #endregion
		
		public ente_salud()
		{
			this._especialista = new EntitySet<especialista>(new Action<especialista>(this.attach_especialista), new Action<especialista>(this.detach_especialista));
			this._generador_contenido = new EntitySet<generador_contenido>(new Action<generador_contenido>(this.attach_generador_contenido), new Action<generador_contenido>(this.detach_generador_contenido));
			this._ciudad = default(EntityRef<ciudad>);
			this._persona = default(EntityRef<persona>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id_persona", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int id_persona
		{
			get
			{
				return this._id_persona;
			}
			set
			{
				if ((this._id_persona != value))
				{
					if (this._persona.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Onid_personaChanging(value);
					this.SendPropertyChanging();
					this._id_persona = value;
					this.SendPropertyChanged("id_persona");
					this.Onid_personaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_nit", DbType="Int NOT NULL")]
		public int nit
		{
			get
			{
				return this._nit;
			}
			set
			{
				if ((this._nit != value))
				{
					this.OnnitChanging(value);
					this.SendPropertyChanging();
					this._nit = value;
					this.SendPropertyChanged("nit");
					this.OnnitChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_razon_social", DbType="VarChar(30)")]
		public string razon_social
		{
			get
			{
				return this._razon_social;
			}
			set
			{
				if ((this._razon_social != value))
				{
					this.Onrazon_socialChanging(value);
					this.SendPropertyChanging();
					this._razon_social = value;
					this.SendPropertyChanged("razon_social");
					this.Onrazon_socialChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_representante", DbType="VarChar(30)")]
		public string representante
		{
			get
			{
				return this._representante;
			}
			set
			{
				if ((this._representante != value))
				{
					this.OnrepresentanteChanging(value);
					this.SendPropertyChanging();
					this._representante = value;
					this.SendPropertyChanged("representante");
					this.OnrepresentanteChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_telefono", DbType="VarChar(30)")]
		public string telefono
		{
			get
			{
				return this._telefono;
			}
			set
			{
				if ((this._telefono != value))
				{
					this.OntelefonoChanging(value);
					this.SendPropertyChanging();
					this._telefono = value;
					this.SendPropertyChanged("telefono");
					this.OntelefonoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_sitio_web", DbType="VarChar(30)")]
		public string sitio_web
		{
			get
			{
				return this._sitio_web;
			}
			set
			{
				if ((this._sitio_web != value))
				{
					this.Onsitio_webChanging(value);
					this.SendPropertyChanging();
					this._sitio_web = value;
					this.SendPropertyChanged("sitio_web");
					this.Onsitio_webChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id_cuidad", DbType="Int NOT NULL")]
		public int id_cuidad
		{
			get
			{
				return this._id_cuidad;
			}
			set
			{
				if ((this._id_cuidad != value))
				{
					if (this._ciudad.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Onid_cuidadChanging(value);
					this.SendPropertyChanging();
					this._id_cuidad = value;
					this.SendPropertyChanged("id_cuidad");
					this.Onid_cuidadChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_capacidad_pacientes", DbType="Int NOT NULL")]
		public int capacidad_pacientes
		{
			get
			{
				return this._capacidad_pacientes;
			}
			set
			{
				if ((this._capacidad_pacientes != value))
				{
					this.Oncapacidad_pacientesChanging(value);
					this.SendPropertyChanging();
					this._capacidad_pacientes = value;
					this.SendPropertyChanged("capacidad_pacientes");
					this.Oncapacidad_pacientesChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ente_salud_especialista", Storage="_especialista", ThisKey="id_persona", OtherKey="id_ente_salud")]
		public EntitySet<especialista> especialista
		{
			get
			{
				return this._especialista;
			}
			set
			{
				this._especialista.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ente_salud_generador_contenido", Storage="_generador_contenido", ThisKey="id_persona", OtherKey="id_ente_salud")]
		public EntitySet<generador_contenido> generador_contenido
		{
			get
			{
				return this._generador_contenido;
			}
			set
			{
				this._generador_contenido.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ciudad_ente_salud", Storage="_ciudad", ThisKey="id_cuidad", OtherKey="id_ciudad", IsForeignKey=true)]
		public ciudad ciudad
		{
			get
			{
				return this._ciudad.Entity;
			}
			set
			{
				ciudad previousValue = this._ciudad.Entity;
				if (((previousValue != value) 
							|| (this._ciudad.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._ciudad.Entity = null;
						previousValue.ente_salud.Remove(this);
					}
					this._ciudad.Entity = value;
					if ((value != null))
					{
						value.ente_salud.Add(this);
						this._id_cuidad = value.id_ciudad;
					}
					else
					{
						this._id_cuidad = default(int);
					}
					this.SendPropertyChanged("ciudad");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="persona_ente_salud", Storage="_persona", ThisKey="id_persona", OtherKey="cedula", IsForeignKey=true)]
		public persona persona
		{
			get
			{
				return this._persona.Entity;
			}
			set
			{
				persona previousValue = this._persona.Entity;
				if (((previousValue != value) 
							|| (this._persona.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._persona.Entity = null;
						previousValue.ente_salud = null;
					}
					this._persona.Entity = value;
					if ((value != null))
					{
						value.ente_salud = this;
						this._id_persona = value.cedula;
					}
					else
					{
						this._id_persona = default(int);
					}
					this.SendPropertyChanged("persona");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_especialista(especialista entity)
		{
			this.SendPropertyChanging();
			entity.ente_salud = this;
		}
		
		private void detach_especialista(especialista entity)
		{
			this.SendPropertyChanging();
			entity.ente_salud = null;
		}
		
		private void attach_generador_contenido(generador_contenido entity)
		{
			this.SendPropertyChanging();
			entity.ente_salud = this;
		}
		
		private void detach_generador_contenido(generador_contenido entity)
		{
			this.SendPropertyChanging();
			entity.ente_salud = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.especialista")]
	public partial class especialista : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id_persona;
		
		private int _id_ciudad;
		
		private System.Nullable<int> _id_ente_salud;
		
		private string _numero_de_licencia_de_salud;
		
		private System.Nullable<System.DateTime> _fecha_de_expedicion;
		
		private string _especialidad;
		
		private EntitySet<cita> _cita;
		
		private EntityRef<ciudad> _ciudad;
		
		private EntityRef<ente_salud> _ente_salud;
		
    #region Definiciones de métodos de extensibilidad
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void Onid_personaChanging(int value);
    partial void Onid_personaChanged();
    partial void Onid_ciudadChanging(int value);
    partial void Onid_ciudadChanged();
    partial void Onid_ente_saludChanging(System.Nullable<int> value);
    partial void Onid_ente_saludChanged();
    partial void Onnumero_de_licencia_de_saludChanging(string value);
    partial void Onnumero_de_licencia_de_saludChanged();
    partial void Onfecha_de_expedicionChanging(System.Nullable<System.DateTime> value);
    partial void Onfecha_de_expedicionChanged();
    partial void OnespecialidadChanging(string value);
    partial void OnespecialidadChanged();
    #endregion
		
		public especialista()
		{
			this._cita = new EntitySet<cita>(new Action<cita>(this.attach_cita), new Action<cita>(this.detach_cita));
			this._ciudad = default(EntityRef<ciudad>);
			this._ente_salud = default(EntityRef<ente_salud>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id_persona", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int id_persona
		{
			get
			{
				return this._id_persona;
			}
			set
			{
				if ((this._id_persona != value))
				{
					this.Onid_personaChanging(value);
					this.SendPropertyChanging();
					this._id_persona = value;
					this.SendPropertyChanged("id_persona");
					this.Onid_personaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id_ciudad", DbType="Int NOT NULL")]
		public int id_ciudad
		{
			get
			{
				return this._id_ciudad;
			}
			set
			{
				if ((this._id_ciudad != value))
				{
					if (this._ciudad.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Onid_ciudadChanging(value);
					this.SendPropertyChanging();
					this._id_ciudad = value;
					this.SendPropertyChanged("id_ciudad");
					this.Onid_ciudadChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id_ente_salud", DbType="Int")]
		public System.Nullable<int> id_ente_salud
		{
			get
			{
				return this._id_ente_salud;
			}
			set
			{
				if ((this._id_ente_salud != value))
				{
					if (this._ente_salud.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Onid_ente_saludChanging(value);
					this.SendPropertyChanging();
					this._id_ente_salud = value;
					this.SendPropertyChanged("id_ente_salud");
					this.Onid_ente_saludChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_numero_de_licencia_de_salud", DbType="VarChar(30)")]
		public string numero_de_licencia_de_salud
		{
			get
			{
				return this._numero_de_licencia_de_salud;
			}
			set
			{
				if ((this._numero_de_licencia_de_salud != value))
				{
					this.Onnumero_de_licencia_de_saludChanging(value);
					this.SendPropertyChanging();
					this._numero_de_licencia_de_salud = value;
					this.SendPropertyChanged("numero_de_licencia_de_salud");
					this.Onnumero_de_licencia_de_saludChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_fecha_de_expedicion", DbType="Date")]
		public System.Nullable<System.DateTime> fecha_de_expedicion
		{
			get
			{
				return this._fecha_de_expedicion;
			}
			set
			{
				if ((this._fecha_de_expedicion != value))
				{
					this.Onfecha_de_expedicionChanging(value);
					this.SendPropertyChanging();
					this._fecha_de_expedicion = value;
					this.SendPropertyChanged("fecha_de_expedicion");
					this.Onfecha_de_expedicionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_especialidad", DbType="VarChar(30)")]
		public string especialidad
		{
			get
			{
				return this._especialidad;
			}
			set
			{
				if ((this._especialidad != value))
				{
					this.OnespecialidadChanging(value);
					this.SendPropertyChanging();
					this._especialidad = value;
					this.SendPropertyChanged("especialidad");
					this.OnespecialidadChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="especialista_cita", Storage="_cita", ThisKey="id_persona", OtherKey="id_especialista")]
		public EntitySet<cita> cita
		{
			get
			{
				return this._cita;
			}
			set
			{
				this._cita.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ciudad_especialista", Storage="_ciudad", ThisKey="id_ciudad", OtherKey="id_ciudad", IsForeignKey=true)]
		public ciudad ciudad
		{
			get
			{
				return this._ciudad.Entity;
			}
			set
			{
				ciudad previousValue = this._ciudad.Entity;
				if (((previousValue != value) 
							|| (this._ciudad.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._ciudad.Entity = null;
						previousValue.especialista.Remove(this);
					}
					this._ciudad.Entity = value;
					if ((value != null))
					{
						value.especialista.Add(this);
						this._id_ciudad = value.id_ciudad;
					}
					else
					{
						this._id_ciudad = default(int);
					}
					this.SendPropertyChanged("ciudad");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ente_salud_especialista", Storage="_ente_salud", ThisKey="id_ente_salud", OtherKey="id_persona", IsForeignKey=true)]
		public ente_salud ente_salud
		{
			get
			{
				return this._ente_salud.Entity;
			}
			set
			{
				ente_salud previousValue = this._ente_salud.Entity;
				if (((previousValue != value) 
							|| (this._ente_salud.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._ente_salud.Entity = null;
						previousValue.especialista.Remove(this);
					}
					this._ente_salud.Entity = value;
					if ((value != null))
					{
						value.especialista.Add(this);
						this._id_ente_salud = value.id_persona;
					}
					else
					{
						this._id_ente_salud = default(Nullable<int>);
					}
					this.SendPropertyChanged("ente_salud");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_cita(cita entity)
		{
			this.SendPropertyChanging();
			entity.especialista = this;
		}
		
		private void detach_cita(cita entity)
		{
			this.SendPropertyChanging();
			entity.especialista = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.generador_contenido")]
	public partial class generador_contenido : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id_generador_contenido;
		
		private int _id_persona;
		
		private int _id_ente_salud;
		
		private EntityRef<ente_salud> _ente_salud;
		
		private EntityRef<persona> _persona;
		
    #region Definiciones de métodos de extensibilidad
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void Onid_generador_contenidoChanging(int value);
    partial void Onid_generador_contenidoChanged();
    partial void Onid_personaChanging(int value);
    partial void Onid_personaChanged();
    partial void Onid_ente_saludChanging(int value);
    partial void Onid_ente_saludChanged();
    #endregion
		
		public generador_contenido()
		{
			this._ente_salud = default(EntityRef<ente_salud>);
			this._persona = default(EntityRef<persona>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id_generador_contenido", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int id_generador_contenido
		{
			get
			{
				return this._id_generador_contenido;
			}
			set
			{
				if ((this._id_generador_contenido != value))
				{
					this.Onid_generador_contenidoChanging(value);
					this.SendPropertyChanging();
					this._id_generador_contenido = value;
					this.SendPropertyChanged("id_generador_contenido");
					this.Onid_generador_contenidoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id_persona", DbType="Int NOT NULL")]
		public int id_persona
		{
			get
			{
				return this._id_persona;
			}
			set
			{
				if ((this._id_persona != value))
				{
					if (this._persona.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Onid_personaChanging(value);
					this.SendPropertyChanging();
					this._id_persona = value;
					this.SendPropertyChanged("id_persona");
					this.Onid_personaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id_ente_salud", DbType="Int NOT NULL")]
		public int id_ente_salud
		{
			get
			{
				return this._id_ente_salud;
			}
			set
			{
				if ((this._id_ente_salud != value))
				{
					if (this._ente_salud.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Onid_ente_saludChanging(value);
					this.SendPropertyChanging();
					this._id_ente_salud = value;
					this.SendPropertyChanged("id_ente_salud");
					this.Onid_ente_saludChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ente_salud_generador_contenido", Storage="_ente_salud", ThisKey="id_ente_salud", OtherKey="id_persona", IsForeignKey=true)]
		public ente_salud ente_salud
		{
			get
			{
				return this._ente_salud.Entity;
			}
			set
			{
				ente_salud previousValue = this._ente_salud.Entity;
				if (((previousValue != value) 
							|| (this._ente_salud.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._ente_salud.Entity = null;
						previousValue.generador_contenido.Remove(this);
					}
					this._ente_salud.Entity = value;
					if ((value != null))
					{
						value.generador_contenido.Add(this);
						this._id_ente_salud = value.id_persona;
					}
					else
					{
						this._id_ente_salud = default(int);
					}
					this.SendPropertyChanged("ente_salud");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="persona_generador_contenido", Storage="_persona", ThisKey="id_persona", OtherKey="cedula", IsForeignKey=true)]
		public persona persona
		{
			get
			{
				return this._persona.Entity;
			}
			set
			{
				persona previousValue = this._persona.Entity;
				if (((previousValue != value) 
							|| (this._persona.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._persona.Entity = null;
						previousValue.generador_contenido.Remove(this);
					}
					this._persona.Entity = value;
					if ((value != null))
					{
						value.generador_contenido.Add(this);
						this._id_persona = value.cedula;
					}
					else
					{
						this._id_persona = default(int);
					}
					this.SendPropertyChanged("persona");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.persona")]
	public partial class persona : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _cedula;
		
		private int _id_rol;
		
		private string _nombre;
		
		private string _apellido;
		
		private string _correo;
		
		private string _celular;
		
		private string _password;
		
		private EntitySet<cita> _cita;
		
		private EntityRef<ente_salud> _ente_salud;
		
		private EntitySet<generador_contenido> _generador_contenido;
		
		private EntityRef<rol> _rol;
		
    #region Definiciones de métodos de extensibilidad
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OncedulaChanging(int value);
    partial void OncedulaChanged();
    partial void Onid_rolChanging(int value);
    partial void Onid_rolChanged();
    partial void OnnombreChanging(string value);
    partial void OnnombreChanged();
    partial void OnapellidoChanging(string value);
    partial void OnapellidoChanged();
    partial void OncorreoChanging(string value);
    partial void OncorreoChanged();
    partial void OncelularChanging(string value);
    partial void OncelularChanged();
    partial void OnpasswordChanging(string value);
    partial void OnpasswordChanged();
    #endregion
		
		public persona()
		{
			this._cita = new EntitySet<cita>(new Action<cita>(this.attach_cita), new Action<cita>(this.detach_cita));
			this._ente_salud = default(EntityRef<ente_salud>);
			this._generador_contenido = new EntitySet<generador_contenido>(new Action<generador_contenido>(this.attach_generador_contenido), new Action<generador_contenido>(this.detach_generador_contenido));
			this._rol = default(EntityRef<rol>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_cedula", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int cedula
		{
			get
			{
				return this._cedula;
			}
			set
			{
				if ((this._cedula != value))
				{
					this.OncedulaChanging(value);
					this.SendPropertyChanging();
					this._cedula = value;
					this.SendPropertyChanged("cedula");
					this.OncedulaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id_rol", DbType="Int NOT NULL")]
		public int id_rol
		{
			get
			{
				return this._id_rol;
			}
			set
			{
				if ((this._id_rol != value))
				{
					if (this._rol.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Onid_rolChanging(value);
					this.SendPropertyChanging();
					this._id_rol = value;
					this.SendPropertyChanged("id_rol");
					this.Onid_rolChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_nombre", DbType="VarChar(30) NOT NULL", CanBeNull=false)]
		public string nombre
		{
			get
			{
				return this._nombre;
			}
			set
			{
				if ((this._nombre != value))
				{
					this.OnnombreChanging(value);
					this.SendPropertyChanging();
					this._nombre = value;
					this.SendPropertyChanged("nombre");
					this.OnnombreChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_apellido", DbType="VarChar(30) NOT NULL", CanBeNull=false)]
		public string apellido
		{
			get
			{
				return this._apellido;
			}
			set
			{
				if ((this._apellido != value))
				{
					this.OnapellidoChanging(value);
					this.SendPropertyChanging();
					this._apellido = value;
					this.SendPropertyChanged("apellido");
					this.OnapellidoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_correo", DbType="VarChar(30) NOT NULL", CanBeNull=false)]
		public string correo
		{
			get
			{
				return this._correo;
			}
			set
			{
				if ((this._correo != value))
				{
					this.OncorreoChanging(value);
					this.SendPropertyChanging();
					this._correo = value;
					this.SendPropertyChanged("correo");
					this.OncorreoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_celular", DbType="VarChar(30) NOT NULL", CanBeNull=false)]
		public string celular
		{
			get
			{
				return this._celular;
			}
			set
			{
				if ((this._celular != value))
				{
					this.OncelularChanging(value);
					this.SendPropertyChanging();
					this._celular = value;
					this.SendPropertyChanged("celular");
					this.OncelularChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_password", DbType="VarChar(30) NOT NULL", CanBeNull=false)]
		public string password
		{
			get
			{
				return this._password;
			}
			set
			{
				if ((this._password != value))
				{
					this.OnpasswordChanging(value);
					this.SendPropertyChanging();
					this._password = value;
					this.SendPropertyChanged("password");
					this.OnpasswordChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="persona_cita", Storage="_cita", ThisKey="cedula", OtherKey="id_persona")]
		public EntitySet<cita> cita
		{
			get
			{
				return this._cita;
			}
			set
			{
				this._cita.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="persona_ente_salud", Storage="_ente_salud", ThisKey="cedula", OtherKey="id_persona", IsUnique=true, IsForeignKey=false)]
		public ente_salud ente_salud
		{
			get
			{
				return this._ente_salud.Entity;
			}
			set
			{
				ente_salud previousValue = this._ente_salud.Entity;
				if (((previousValue != value) 
							|| (this._ente_salud.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._ente_salud.Entity = null;
						previousValue.persona = null;
					}
					this._ente_salud.Entity = value;
					if ((value != null))
					{
						value.persona = this;
					}
					this.SendPropertyChanged("ente_salud");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="persona_generador_contenido", Storage="_generador_contenido", ThisKey="cedula", OtherKey="id_persona")]
		public EntitySet<generador_contenido> generador_contenido
		{
			get
			{
				return this._generador_contenido;
			}
			set
			{
				this._generador_contenido.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="rol_persona", Storage="_rol", ThisKey="id_rol", OtherKey="id_rol", IsForeignKey=true)]
		public rol rol
		{
			get
			{
				return this._rol.Entity;
			}
			set
			{
				rol previousValue = this._rol.Entity;
				if (((previousValue != value) 
							|| (this._rol.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._rol.Entity = null;
						previousValue.persona.Remove(this);
					}
					this._rol.Entity = value;
					if ((value != null))
					{
						value.persona.Add(this);
						this._id_rol = value.id_rol;
					}
					else
					{
						this._id_rol = default(int);
					}
					this.SendPropertyChanged("rol");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_cita(cita entity)
		{
			this.SendPropertyChanging();
			entity.persona = this;
		}
		
		private void detach_cita(cita entity)
		{
			this.SendPropertyChanging();
			entity.persona = null;
		}
		
		private void attach_generador_contenido(generador_contenido entity)
		{
			this.SendPropertyChanging();
			entity.persona = this;
		}
		
		private void detach_generador_contenido(generador_contenido entity)
		{
			this.SendPropertyChanging();
			entity.persona = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.recomendacion")]
	public partial class recomendacion : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id_recomendacion;
		
		private string _recomendacion_texto;
		
		private int _id_enfermedad;
		
		private EntityRef<enfermedad> _enfermedad;
		
    #region Definiciones de métodos de extensibilidad
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void Onid_recomendacionChanging(int value);
    partial void Onid_recomendacionChanged();
    partial void Onrecomendacion_textoChanging(string value);
    partial void Onrecomendacion_textoChanged();
    partial void Onid_enfermedadChanging(int value);
    partial void Onid_enfermedadChanged();
    #endregion
		
		public recomendacion()
		{
			this._enfermedad = default(EntityRef<enfermedad>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id_recomendacion", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int id_recomendacion
		{
			get
			{
				return this._id_recomendacion;
			}
			set
			{
				if ((this._id_recomendacion != value))
				{
					this.Onid_recomendacionChanging(value);
					this.SendPropertyChanging();
					this._id_recomendacion = value;
					this.SendPropertyChanged("id_recomendacion");
					this.Onid_recomendacionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_recomendacion_texto", DbType="Text NOT NULL", CanBeNull=false, UpdateCheck=UpdateCheck.Never)]
		public string recomendacion_texto
		{
			get
			{
				return this._recomendacion_texto;
			}
			set
			{
				if ((this._recomendacion_texto != value))
				{
					this.Onrecomendacion_textoChanging(value);
					this.SendPropertyChanging();
					this._recomendacion_texto = value;
					this.SendPropertyChanged("recomendacion_texto");
					this.Onrecomendacion_textoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id_enfermedad", DbType="Int NOT NULL")]
		public int id_enfermedad
		{
			get
			{
				return this._id_enfermedad;
			}
			set
			{
				if ((this._id_enfermedad != value))
				{
					if (this._enfermedad.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Onid_enfermedadChanging(value);
					this.SendPropertyChanging();
					this._id_enfermedad = value;
					this.SendPropertyChanged("id_enfermedad");
					this.Onid_enfermedadChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="enfermedad_recomendacion", Storage="_enfermedad", ThisKey="id_enfermedad", OtherKey="id_enfermedad", IsForeignKey=true)]
		public enfermedad enfermedad
		{
			get
			{
				return this._enfermedad.Entity;
			}
			set
			{
				enfermedad previousValue = this._enfermedad.Entity;
				if (((previousValue != value) 
							|| (this._enfermedad.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._enfermedad.Entity = null;
						previousValue.recomendacion.Remove(this);
					}
					this._enfermedad.Entity = value;
					if ((value != null))
					{
						value.recomendacion.Add(this);
						this._id_enfermedad = value.id_enfermedad;
					}
					else
					{
						this._id_enfermedad = default(int);
					}
					this.SendPropertyChanged("enfermedad");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.rol")]
	public partial class rol : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id_rol;
		
		private string _rol1;
		
		private EntitySet<persona> _persona;
		
    #region Definiciones de métodos de extensibilidad
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void Onid_rolChanging(int value);
    partial void Onid_rolChanged();
    partial void Onrol1Changing(string value);
    partial void Onrol1Changed();
    #endregion
		
		public rol()
		{
			this._persona = new EntitySet<persona>(new Action<persona>(this.attach_persona), new Action<persona>(this.detach_persona));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id_rol", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int id_rol
		{
			get
			{
				return this._id_rol;
			}
			set
			{
				if ((this._id_rol != value))
				{
					this.Onid_rolChanging(value);
					this.SendPropertyChanging();
					this._id_rol = value;
					this.SendPropertyChanged("id_rol");
					this.Onid_rolChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="rol", Storage="_rol1", DbType="VarChar(30) NOT NULL", CanBeNull=false)]
		public string rol1
		{
			get
			{
				return this._rol1;
			}
			set
			{
				if ((this._rol1 != value))
				{
					this.Onrol1Changing(value);
					this.SendPropertyChanging();
					this._rol1 = value;
					this.SendPropertyChanged("rol1");
					this.Onrol1Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="rol_persona", Storage="_persona", ThisKey="id_rol", OtherKey="id_rol")]
		public EntitySet<persona> persona
		{
			get
			{
				return this._persona;
			}
			set
			{
				this._persona.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_persona(persona entity)
		{
			this.SendPropertyChanging();
			entity.rol = this;
		}
		
		private void detach_persona(persona entity)
		{
			this.SendPropertyChanging();
			entity.rol = null;
		}
	}
	
	public partial class sp_loginResult
	{
		
		private int _cedula;
		
		private int _id_rol;
		
		private string _nombre;
		
		private string _apellido;
		
		private string _correo;
		
		private string _celular;
		
		private string _password;
		
		public sp_loginResult()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_cedula", DbType="Int NOT NULL")]
		public int cedula
		{
			get
			{
				return this._cedula;
			}
			set
			{
				if ((this._cedula != value))
				{
					this._cedula = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id_rol", DbType="Int NOT NULL")]
		public int id_rol
		{
			get
			{
				return this._id_rol;
			}
			set
			{
				if ((this._id_rol != value))
				{
					this._id_rol = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_nombre", DbType="VarChar(30) NOT NULL", CanBeNull=false)]
		public string nombre
		{
			get
			{
				return this._nombre;
			}
			set
			{
				if ((this._nombre != value))
				{
					this._nombre = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_apellido", DbType="VarChar(30) NOT NULL", CanBeNull=false)]
		public string apellido
		{
			get
			{
				return this._apellido;
			}
			set
			{
				if ((this._apellido != value))
				{
					this._apellido = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_correo", DbType="VarChar(30) NOT NULL", CanBeNull=false)]
		public string correo
		{
			get
			{
				return this._correo;
			}
			set
			{
				if ((this._correo != value))
				{
					this._correo = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_celular", DbType="VarChar(30) NOT NULL", CanBeNull=false)]
		public string celular
		{
			get
			{
				return this._celular;
			}
			set
			{
				if ((this._celular != value))
				{
					this._celular = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_password", DbType="VarChar(30) NOT NULL", CanBeNull=false)]
		public string password
		{
			get
			{
				return this._password;
			}
			set
			{
				if ((this._password != value))
				{
					this._password = value;
				}
			}
		}
	}
	
	public partial class sp_checkUserResult
	{
		
		private int _cedula;
		
		private int _id_rol;
		
		private string _nombre;
		
		private string _apellido;
		
		private string _correo;
		
		private string _celular;
		
		private string _password;
		
		public sp_checkUserResult()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_cedula", DbType="Int NOT NULL")]
		public int cedula
		{
			get
			{
				return this._cedula;
			}
			set
			{
				if ((this._cedula != value))
				{
					this._cedula = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id_rol", DbType="Int NOT NULL")]
		public int id_rol
		{
			get
			{
				return this._id_rol;
			}
			set
			{
				if ((this._id_rol != value))
				{
					this._id_rol = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_nombre", DbType="VarChar(30) NOT NULL", CanBeNull=false)]
		public string nombre
		{
			get
			{
				return this._nombre;
			}
			set
			{
				if ((this._nombre != value))
				{
					this._nombre = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_apellido", DbType="VarChar(30) NOT NULL", CanBeNull=false)]
		public string apellido
		{
			get
			{
				return this._apellido;
			}
			set
			{
				if ((this._apellido != value))
				{
					this._apellido = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_correo", DbType="VarChar(30) NOT NULL", CanBeNull=false)]
		public string correo
		{
			get
			{
				return this._correo;
			}
			set
			{
				if ((this._correo != value))
				{
					this._correo = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_celular", DbType="VarChar(30) NOT NULL", CanBeNull=false)]
		public string celular
		{
			get
			{
				return this._celular;
			}
			set
			{
				if ((this._celular != value))
				{
					this._celular = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_password", DbType="VarChar(30) NOT NULL", CanBeNull=false)]
		public string password
		{
			get
			{
				return this._password;
			}
			set
			{
				if ((this._password != value))
				{
					this._password = value;
				}
			}
		}
	}
}
#pragma warning restore 1591
